ann_precip_stdev=annprecip_stdev,
ann_temp_mean_c=anntempmean_mean,
ann_temp_stdev=anntempmean_stdev,
elevation_range_m=elevation_range,
elevation_mean_m=elevation_mean,
elevation_median_m=elevation_median,
species_overlap_by_order_count=`species-overlap-by-order_count`,
species_overlap_all_count=`species-overlap-all_count`,
range_area_m2=range_area_m2) %>%
filter(!is.na(binomial)) %>%
distinct()
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
climate_data$binomial<-mapvalues(climate_data$binomial,from=dict$iucn,to=dict$NAMES_TO_USE)
length(climate_data$binomial)
# what species are in climate data that aren't in VIP_data (241 vs 235)
climate_data$binomial[!(climate_data$binomial %in% VIP_data$binomial)]
#what species present in data that aren't in climate data?
data %>%
filter(!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
anti_join(climate_data, by="binomial")
# combine data
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
data<-left_join(data,climate_data) %>%
filter(!is.na(binomial))
data
unique(data$binomial)
length(unique(data$binomial))
# get population size data
popsize_data<-read_csv("/home/lauterbur/Documents/Mammal_disease/population_size/paradox_variation/data/estimated_popsizes.csv") %>%
rename(binomial=species) %>%
select(c("binomial", "log10_popsize", "log10_density")) %>%
mutate(binomial=gsub(" ","_",binomial))
length(popsize_data$binomial)
unique(data$binomial)[!c(unique(data$binomial) %in% popsize_data$binomial)]
# combine data
data<-left_join(data,popsize_data) %>%
filter(!is.na(binomial),
is.na(log10_popsize))
data
unique(data$binomial)
# load species translations
dict<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/VIPdata_vs_Ecotraitdata.csv")
# load VIP data
VIP_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/VIP_data_with_constraint/", regexp="\\.txt$") %>%
map_dfr(read.table, #col.names=c("label","ok","alpha","p"), stringsAsFactors=FALSE,
.id="viral_family")  %>%
dplyr::rename(binomial=V1, ratio=V2, VIP_alpha=V3, control_alpha=V4, p_value=V5) %>%
mutate(binomial=ifelse(binomial=="|Dicerorhinus_sumatrensis_sumatre...|", "Dicerorhinus_sumatrensis_sumatrensis",
ifelse(binomial=="|Neophocaena_asiaeorientalis_asia...|", "Neophocaena_asiaeorientalis_asiaeorientalis",
ifelse(binomial=="|Peromyscus_californicus_insignis...|", "Peromyscus_californicus_insignis",
binomial)))) %>%
mutate(binomial=plyr::mapvalues(binomial,from=dict$VIP_data,to=dict$NAMES_TO_USE)) %>%
mutate(viral_family=file_path_sans_ext(basename(viral_family))) %>%
filter(binomial!="Solenodon_paradoxus", # these genomes are from two different subspecies, with somewhat different
!(binomial %in% c("Rattus_rattus", "Sus_scrofa", "Bos_taurus", "Bos_indicus", "Bos_grunniens",
"Camelus_bactrianus", "Canis_lupus_dingo", "Canis_familiaris", "Cavia_porcellus",
"Equus_asinus", "Equus_asinus_asinus", "Equus_caballus", "Felis_catus", "Homo_sapiens",
"Lama_glama", "Mustela_putorius_furo", "Ovis_aries", "Mus_musculus",
"Capra_hircus", "Vicugna_pacos")), # domesticated
binomial!="Microcebus_sp3GT2019") %>% # species uncharacterized
filter(!is.na(binomial),
!grepl("Node",binomial))
unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))]
length(unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))])
# load trait data
trait_data<-as_tibble(read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/COMBINE_trait_data_reported.csv")) %>%
dplyr::rename(binomial=iucn2020_binomial)
trait_data
trait_data <- trait_data %>%
mutate(binomial=gsub(" ","_",binomial))  %>%
select(-c(genus, species, phylacine_binomial, biogeographical_realm,
island_dwelling, disected_by_mountains, glaciation)) %>%
distinct()
trait_data$binomial<-mapvalues(trait_data$binomial,from=dict$trait_data,to=dict$NAMES_TO_USE)
trait_data<- trait_data %>%
filter(!is.na(binomial))
trait_data
length(trait_data$binomial)
# what species present in VIP data that aren't in trait data?
VIP_data %>% filter(!grepl("Node",binomial)) %>% select(binomial) %>% unique() %>% anti_join(trait_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
trait_data$binomial<-gsub(" ","_",trait_data$binomial)
data<-left_join(VIP_data,trait_data) %>%
filter(!is.na(binomial))
data
length(unique(data$binomial)[!grepl("Node",unique(data$binomial))])
# get climate data
climate_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/gis_calculated_files/", regexp="\\.csv$") %>%
map(~read_csv(.)) %>%
reduce(full_join, by = "binomial") %>%
select(binomial, ends_with("mean"), ends_with("median"), ends_with("range"),
ends_with("stdev"), lat_min, lat_max, range_area_m2, ends_with("count")) %>%
dplyr::rename(
max_temp_warmest_mean_c=maxtemp_mean,
max_temp_warmest_stdev=maxtemp_stdev,
min_temp_coldest_mean_c=mintemp_mean,
min_temp_coldest_stdev=mintemp_stdev,
precip_seasonality_mean=precipseas_mean,
precip_seasonality_stdev=precipseas_stdev,
ann_precip_mean_mm=annprecip_mean,
ann_precip_stdev=annprecip_stdev,
ann_temp_mean_c=anntempmean_mean,
ann_temp_stdev=anntempmean_stdev,
elevation_range_m=elevation_range,
elevation_mean_m=elevation_mean,
elevation_median_m=elevation_median,
species_overlap_by_order_count=`species-overlap-by-order_count`,
species_overlap_all_count=`species-overlap-all_count`,
range_area_m2=range_area_m2) %>%
filter(!is.na(binomial)) %>%
distinct()
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
climate_data$binomial<-mapvalues(climate_data$binomial,from=dict$iucn,to=dict$NAMES_TO_USE)
length(climate_data$binomial)
# what species are in climate data that aren't in VIP_data (241 vs 235)
climate_data$binomial[!(climate_data$binomial %in% VIP_data$binomial)]
# Canis_lupus, Equus_africanus, Giraffa_camelopardalis, Mus_musculus, Rattus_rattus, Solenodon_paradoxus, Sus_scrofa
# All species intentionally removed
#what species present in data that aren't in climate data?
data %>%
filter(!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
anti_join(climate_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
data<-left_join(data,climate_data) %>%
filter(!is.na(binomial))
data
unique(data$binomial)
length(unique(data$binomial))
# get population size data
popsize_data<-read_csv("/home/lauterbur/Documents/Mammal_disease/population_size/paradox_variation/data/estimated_popsizes.csv") %>%
rename(binomial=species) %>%
select(c("binomial", "log10_popsize", "log10_density")) %>%
mutate(binomial=gsub(" ","_",binomial))
length(popsize_data$binomial)
unique(data$binomial)[!c(unique(data$binomial) %in% popsize_data$binomial)]
# missing Camelus_dromedarius, Giraffa_tippelskirchi
# combine data
data<-left_join(data,popsize_data) %>%
filter(!is.na(binomial),
is.na(!log10_popsize)) # finally gets rid of Camel and Giraffe
data
unique(data$binomial)
length(unique(data$binomial))
# get all species in data for climate data
VIP_species<-data %>%
mutate(binomial=mapvalues(data$binomial,from=dict$VIP_data,to=dict$iucn)) %>%
select(binomial) %>%
unique()
length(VIP_species$binomial)
# check names with IUCN species
iucn_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/all_IUCN_species.csv")
iucn_species$binomial<-gsub(" ","_",iucn_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% iucn_species$binomial))]
# Camelus dromedarius gets dropped because it's in VIP data but not trait data
# output species list for qGIS
VIP_species %>%
filter(!is.na(binomial)) %>%
mutate(binomial=gsub("_"," ",binomial),
yes="yes") %>%
write_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/species_in_data.csv")
# check if species from qGIS have all VIP species
test_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/test_species.csv")
test_species$binomial<-gsub(" ","_",test_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% test_species$binomial))]
# Camelus dromedarius - because this gets tossed at the COMBINE data stage
VIP_species %>%
filter(!is.na(binomial)) %>%
mutate(binomial=gsub("_"," ",binomial),
yes="yes")
data
# load species translations
dict<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/VIPdata_vs_Ecotraitdata.csv")
# load VIP data
VIP_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/VIP_data_with_constraint/", regexp="\\.txt$") %>%
map_dfr(read.table, #col.names=c("label","ok","alpha","p"), stringsAsFactors=FALSE,
.id="viral_family")  %>%
dplyr::rename(binomial=V1, ratio=V2, VIP_alpha=V3, control_alpha=V4, p_value=V5) %>%
mutate(binomial=ifelse(binomial=="|Dicerorhinus_sumatrensis_sumatre...|", "Dicerorhinus_sumatrensis_sumatrensis",
ifelse(binomial=="|Neophocaena_asiaeorientalis_asia...|", "Neophocaena_asiaeorientalis_asiaeorientalis",
ifelse(binomial=="|Peromyscus_californicus_insignis...|", "Peromyscus_californicus_insignis",
binomial)))) %>%
mutate(binomial=plyr::mapvalues(binomial,from=dict$VIP_data,to=dict$NAMES_TO_USE)) %>%
mutate(viral_family=file_path_sans_ext(basename(viral_family))) %>%
filter(binomial!="Solenodon_paradoxus", # these genomes are from two different subspecies, with somewhat different
!(binomial %in% c("Rattus_rattus", "Sus_scrofa", "Bos_taurus", "Bos_indicus", "Bos_grunniens",
"Camelus_bactrianus", "Canis_lupus_dingo", "Canis_familiaris", "Cavia_porcellus",
"Equus_asinus", "Equus_asinus_asinus", "Equus_caballus", "Felis_catus", "Homo_sapiens",
"Lama_glama", "Mustela_putorius_furo", "Ovis_aries", "Mus_musculus",
"Capra_hircus", "Vicugna_pacos")), # domesticated
binomial!="Microcebus_sp3GT2019") %>% # species uncharacterized
filter(!is.na(binomial),
!grepl("Node",binomial))
unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))]
length(unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))])
# load trait data
trait_data<-as_tibble(read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/COMBINE_trait_data_reported.csv")) %>%
dplyr::rename(binomial=iucn2020_binomial)
trait_data
trait_data <- trait_data %>%
mutate(binomial=gsub(" ","_",binomial))  %>%
select(-c(genus, species, phylacine_binomial, biogeographical_realm,
island_dwelling, disected_by_mountains, glaciation)) %>%
distinct()
trait_data$binomial<-mapvalues(trait_data$binomial,from=dict$trait_data,to=dict$NAMES_TO_USE)
trait_data<- trait_data %>%
filter(!is.na(binomial))
trait_data
length(trait_data$binomial)
# what species present in VIP data that aren't in trait data?
VIP_data %>% filter(!grepl("Node",binomial)) %>% select(binomial) %>% unique() %>% anti_join(trait_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
trait_data$binomial<-gsub(" ","_",trait_data$binomial)
data<-left_join(VIP_data,trait_data) %>%
filter(!is.na(binomial))
data
length(unique(data$binomial)[!grepl("Node",unique(data$binomial))])
# get climate data
climate_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/gis_calculated_files/", regexp="\\.csv$") %>%
map(~read_csv(.)) %>%
reduce(full_join, by = "binomial") %>%
select(binomial, ends_with("mean"), ends_with("median"), ends_with("range"),
ends_with("stdev"), lat_min, lat_max, range_area_m2, ends_with("count")) %>%
dplyr::rename(
max_temp_warmest_mean_c=maxtemp_mean,
max_temp_warmest_stdev=maxtemp_stdev,
min_temp_coldest_mean_c=mintemp_mean,
min_temp_coldest_stdev=mintemp_stdev,
precip_seasonality_mean=precipseas_mean,
precip_seasonality_stdev=precipseas_stdev,
ann_precip_mean_mm=annprecip_mean,
ann_precip_stdev=annprecip_stdev,
ann_temp_mean_c=anntempmean_mean,
ann_temp_stdev=anntempmean_stdev,
elevation_range_m=elevation_range,
elevation_mean_m=elevation_mean,
elevation_median_m=elevation_median,
species_overlap_by_order_count=`species-overlap-by-order_count`,
species_overlap_all_count=`species-overlap-all_count`,
range_area_m2=range_area_m2) %>%
filter(!is.na(binomial)) %>%
distinct()
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
climate_data$binomial<-mapvalues(climate_data$binomial,from=dict$iucn,to=dict$NAMES_TO_USE)
length(climate_data$binomial)
# what species are in climate data that aren't in VIP_data (241 vs 235)
climate_data$binomial[!(climate_data$binomial %in% VIP_data$binomial)]
# Canis_lupus, Equus_africanus, Giraffa_camelopardalis, Mus_musculus, Rattus_rattus, Solenodon_paradoxus, Sus_scrofa
# All species intentionally removed
#what species present in data that aren't in climate data?
data %>%
filter(!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
anti_join(climate_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
data<-left_join(data,climate_data) %>%
filter(!is.na(binomial))
data
unique(data$binomial)
length(unique(data$binomial))
# get population size data
popsize_data<-read_csv("/home/lauterbur/Documents/Mammal_disease/population_size/paradox_variation/data/estimated_popsizes.csv") %>%
rename(binomial=species) %>%
select(c("binomial", "log10_popsize", "log10_density")) %>%
mutate(binomial=gsub(" ","_",binomial))
length(popsize_data$binomial)
unique(data$binomial)[!c(unique(data$binomial) %in% popsize_data$binomial)]
# missing Camelus_dromedarius, Giraffa_tippelskirchi
# combine data
data<-left_join(data,popsize_data) %>%
filter(!is.na(binomial),
!is.na(log10_popsize)) # finally gets rid of Camel and Giraffe
data
unique(data$binomial)
length(unique(data$binomial))
# get all species in data for climate data
VIP_species<-data %>%
mutate(binomial=mapvalues(data$binomial,from=dict$VIP_data,to=dict$iucn)) %>%
select(binomial) %>%
unique()
length(VIP_species$binomial)
# check names with IUCN species
iucn_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/all_IUCN_species.csv")
iucn_species$binomial<-gsub(" ","_",iucn_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% iucn_species$binomial))]
# output species list for qGIS
VIP_species %>%
filter(!is.na(binomial)) %>%
mutate(binomial=gsub("_"," ",binomial),
yes="yes") %>%
write_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/species_in_data.csv")
VIP_species %>%
filter(!is.na(binomial)) %>%
mutate(binomial=gsub("_"," ",binomial),
yes="yes")
# check if species from qGIS have all VIP species
test_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/test_species.csv")
test_species$binomial<-gsub(" ","_",test_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% test_species$binomial))]
# output binomials for use in time_calibration
data %>%
filter(!is.na(binomial),
!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
write_csv("/home/lauterbur/Documents/Mammal_disease/trees/species_names.csv")
# load tree
tree<-read.newick("/home/lauterbur/Documents/Mammal_disease/trees/tree_time_calibrated.nwk")
# change tip labels as necessary
tree$tip.label<-mapvalues(tree$tip.label,from=dict$tree,to=dict$NAMES_TO_USE)
# any data without tips in tree or vice versa?
unique(data$binomial)[!(unique(data$binomial) %in% tree$tip.label)]
tree$tip.label[!(tree$tip.label %in% data$binomial)]
# get rid of any tips not in data
tree<-drop.tip(tree,tree$tip.label[is.na(tree$tip.label)])
tree<-keep.tip(tree,tree$tip.label[which(tree$tip.label %in% data$binomial)])
# make sure these are the same except node labels and branch lengths
is.binary(tree)
# root tree
is.rooted(tree)
tree<-root(tree,"Choloepus_hoffmanni", resolve.root=TRUE) # Xenarthra (Atlantogenata) root based on Liu et al. 2017
tree
plot(tree)
# finalize dataset
data
colnames(data)
# load species translations
dict<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/VIPdata_vs_Ecotraitdata.csv")
# load VIP data
VIP_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/VIP_data_with_constraint/", regexp="\\.txt$") %>%
map_dfr(read.table, #col.names=c("label","ok","alpha","p"), stringsAsFactors=FALSE,
.id="viral_family")  %>%
dplyr::rename(binomial=V1, ratio=V2, VIP_alpha=V3, control_alpha=V4, p_value=V5) %>%
mutate(binomial=ifelse(binomial=="|Dicerorhinus_sumatrensis_sumatre...|", "Dicerorhinus_sumatrensis_sumatrensis",
ifelse(binomial=="|Neophocaena_asiaeorientalis_asia...|", "Neophocaena_asiaeorientalis_asiaeorientalis",
ifelse(binomial=="|Peromyscus_californicus_insignis...|", "Peromyscus_californicus_insignis",
binomial)))) %>%
mutate(binomial=plyr::mapvalues(binomial,from=dict$VIP_data,to=dict$NAMES_TO_USE)) %>%
mutate(viral_family=file_path_sans_ext(basename(viral_family))) %>%
filter(binomial!="Solenodon_paradoxus", # these genomes are from two different subspecies, with somewhat different
!(binomial %in% c("Rattus_rattus", "Sus_scrofa", "Bos_taurus", "Bos_indicus", "Bos_grunniens",
"Camelus_bactrianus", "Canis_lupus_dingo", "Canis_familiaris", "Cavia_porcellus",
"Equus_asinus", "Equus_asinus_asinus", "Equus_caballus", "Felis_catus", "Homo_sapiens",
"Lama_glama", "Mustela_putorius_furo", "Ovis_aries", "Mus_musculus",
"Capra_hircus", "Vicugna_pacos")), # domesticated
binomial!="Microcebus_sp3GT2019") %>% # species uncharacterized
filter(!is.na(binomial),
!grepl("Node",binomial))
unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))]
length(unique(VIP_data$binomial)[!grepl("Node",unique(VIP_data$binomial))])
# load trait data
trait_data<-as_tibble(read_csv("/home/lauterbur/Documents/Mammal_disease/data/data_sources/COMBINE_trait_data_reported.csv")) %>%
dplyr::rename(binomial=iucn2020_binomial)
trait_data
trait_data <- trait_data %>%
mutate(binomial=gsub(" ","_",binomial))  %>%
select(-c(genus, species, phylacine_binomial, biogeographical_realm,
island_dwelling, disected_by_mountains, glaciation)) %>%
distinct()
trait_data$binomial<-mapvalues(trait_data$binomial,from=dict$trait_data,to=dict$NAMES_TO_USE)
trait_data<- trait_data %>%
filter(!is.na(binomial))
trait_data
length(trait_data$binomial)
# what species present in VIP data that aren't in trait data?
VIP_data %>% filter(!grepl("Node",binomial)) %>% select(binomial) %>% unique() %>% anti_join(trait_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
trait_data$binomial<-gsub(" ","_",trait_data$binomial)
data<-left_join(VIP_data,trait_data) %>%
filter(!is.na(binomial))
data
length(unique(data$binomial)[!grepl("Node",unique(data$binomial))])
# get climate data
climate_data<-dir_ls("/home/lauterbur/Documents/Mammal_disease/data/gis_calculated_files/", regexp="\\.csv$") %>%
map(~read_csv(.)) %>%
reduce(full_join, by = "binomial") %>%
select(binomial, ends_with("mean"), ends_with("median"), ends_with("range"),
ends_with("stdev"), lat_min, lat_max, range_area_m2, ends_with("count")) %>%
dplyr::rename(
max_temp_warmest_mean_c=maxtemp_mean,
max_temp_warmest_stdev=maxtemp_stdev,
min_temp_coldest_mean_c=mintemp_mean,
min_temp_coldest_stdev=mintemp_stdev,
precip_seasonality_mean=precipseas_mean,
precip_seasonality_stdev=precipseas_stdev,
ann_precip_mean_mm=annprecip_mean,
ann_precip_stdev=annprecip_stdev,
ann_temp_mean_c=anntempmean_mean,
ann_temp_stdev=anntempmean_stdev,
elevation_range_m=elevation_range,
elevation_mean_m=elevation_mean,
elevation_median_m=elevation_median,
species_overlap_by_order_count=`species-overlap-by-order_count`,
species_overlap_all_count=`species-overlap-all_count`,
range_area_m2=range_area_m2) %>%
filter(!is.na(binomial)) %>%
distinct()
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
climate_data$binomial<-mapvalues(climate_data$binomial,from=dict$iucn,to=dict$NAMES_TO_USE)
length(climate_data$binomial)
# what species are in climate data that aren't in VIP_data (241 vs 235)
climate_data$binomial[!(climate_data$binomial %in% VIP_data$binomial)]
# Canis_lupus, Equus_africanus, Giraffa_camelopardalis, Mus_musculus, Rattus_rattus, Solenodon_paradoxus, Sus_scrofa
# All species intentionally removed
#what species present in data that aren't in climate data?
data %>%
filter(!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
anti_join(climate_data, by="binomial")
# Camelus dromedarius - not in COMBINE
# Giraffa tippelskirchi - not in COMBINE
# combine data
climate_data$binomial<-gsub(" ","_",climate_data$binomial)
data<-left_join(data,climate_data) %>%
filter(!is.na(binomial))
data
unique(data$binomial)
length(unique(data$binomial))
# get population size data
popsize_data<-read_csv("/home/lauterbur/Documents/Mammal_disease/population_size/paradox_variation/data/estimated_popsizes.csv") %>%
rename(binomial=species) %>%
select(c("binomial", "log10_popsize", "log10_density")) %>%
mutate(binomial=gsub(" ","_",binomial),
pop_size=10^log10_popsize,
density=10^log10_density)
length(popsize_data$binomial)
unique(data$binomial)[!c(unique(data$binomial) %in% popsize_data$binomial)]
# missing Camelus_dromedarius, Giraffa_tippelskirchi
# combine data
data<-left_join(data,popsize_data) %>%
filter(!is.na(binomial),
!is.na(log10_popsize)) # finally gets rid of Camel and Giraffe
data
unique(data$binomial)
length(unique(data$binomial))
log10(popsize_data$pop_size)
popsize_data$log10_popsize
# get all species in data for climate data
VIP_species<-data %>%
mutate(binomial=mapvalues(data$binomial,from=dict$VIP_data,to=dict$iucn)) %>%
select(binomial) %>%
unique()
length(VIP_species$binomial)
# check names with IUCN species
iucn_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/all_IUCN_species.csv")
iucn_species$binomial<-gsub(" ","_",iucn_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% iucn_species$binomial))]
# output species list for qGIS
VIP_species %>%
filter(!is.na(binomial)) %>%
mutate(binomial=gsub("_"," ",binomial),
yes="yes") %>%
write_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/species_in_data.csv")
# check if species from qGIS have all VIP species
test_species<-read_csv("/home/lauterbur/Documents/Mammal_disease/data/IUCN_ranges/test_species.csv")
test_species$binomial<-gsub(" ","_",test_species$binomial)
VIP_species$binomial[which(!(VIP_species$binomial %in% test_species$binomial))]
# output binomials for use in time_calibration
data %>%
filter(!is.na(binomial),
!grepl("Node",binomial)) %>%
select(binomial) %>%
unique() %>%
write_csv("/home/lauterbur/Documents/Mammal_disease/trees/species_names.csv")
# load tree
tree<-read.newick("/home/lauterbur/Documents/Mammal_disease/trees/tree_time_calibrated.nwk")
# change tip labels as necessary
tree$tip.label<-mapvalues(tree$tip.label,from=dict$tree,to=dict$NAMES_TO_USE)
# any data without tips in tree or vice versa?
unique(data$binomial)[!(unique(data$binomial) %in% tree$tip.label)]
tree$tip.label[!(tree$tip.label %in% data$binomial)]
# get rid of any tips not in data
tree<-drop.tip(tree,tree$tip.label[is.na(tree$tip.label)])
tree<-keep.tip(tree,tree$tip.label[which(tree$tip.label %in% data$binomial)])
# make sure these are the same except node labels and branch lengths
is.binary(tree)
# root tree
is.rooted(tree)
tree<-root(tree,"Choloepus_hoffmanni", resolve.root=TRUE) # Xenarthra (Atlantogenata) root based on Liu et al. 2017
tree
plot(tree)
# finalize dataset
data
colnames(data)
length(unique(data$binomial))
# anything in final data that isn't in one of the individual datasets?
unique(data$binomial)[!(unique(data$binomial) %in% unique(VIP_data$binomial))]
data %>%
select(-c(VIP_alpha, control_alpha, p_value, ratio, viral_family)) %>%
distinct() %>%
filter(!is.na(binomial)) %>%
write.csv("/home/lauterbur/Documents/Mammal_disease/data/combined_climate_trait.csv")
write.csv(data, "/home/lauterbur/Documents/Mammal_disease/data/constraint1_combined_VIP_climate_trait.csv")
write.tree(tree, "/home/lauterbur/Documents/Mammal_disease/trees/combined_data_limited_tree.nwk")
save.image("species_for_analysis.Rdata")
